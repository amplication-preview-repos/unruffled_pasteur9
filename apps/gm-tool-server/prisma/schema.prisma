datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Stat {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Location {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Npc {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Campaign {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quest {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Template {
  id        String              @id @default(cuid())
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  name      String?
  entity    EnumTemplateEntity?
  fields    Json?
}

model UserField {
  id        String                  @id @default(cuid())
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
  typeField EnumUserFieldTypeField?
  entity    EnumUserFieldEntity?
  name      String?
}

model Container {
  id        String                  @id @default(cuid())
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
  name      String?
  typeField EnumContainerTypeField?
  parent    String?
}

model Property {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?
  value     String?
}

model PropertyGroup {
  id        String                   @id @default(cuid())
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  name      String?
  parent    EnumPropertyGroupParent?
}

model Category {
  id        String                @id @default(cuid())
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  contains  EnumCategoryContains?
  name      String?
}

enum EnumTemplateEntity {
  Option1
}

enum EnumUserFieldTypeField {
  Option1
}

enum EnumUserFieldEntity {
  Option1
}

enum EnumContainerTypeField {
  Option1
}

enum EnumPropertyGroupParent {
  Option1
}

enum EnumCategoryContains {
  Option1
}
