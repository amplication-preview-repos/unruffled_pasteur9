/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Stat as PrismaStat } from "@prisma/client";

export class StatServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.StatCountArgs, "select">): Promise<number> {
    return this.prisma.stat.count(args);
  }

  async stats(args: Prisma.StatFindManyArgs): Promise<PrismaStat[]> {
    return this.prisma.stat.findMany(args);
  }
  async stat(args: Prisma.StatFindUniqueArgs): Promise<PrismaStat | null> {
    return this.prisma.stat.findUnique(args);
  }
  async createStat(args: Prisma.StatCreateArgs): Promise<PrismaStat> {
    return this.prisma.stat.create(args);
  }
  async updateStat(args: Prisma.StatUpdateArgs): Promise<PrismaStat> {
    return this.prisma.stat.update(args);
  }
  async deleteStat(args: Prisma.StatDeleteArgs): Promise<PrismaStat> {
    return this.prisma.stat.delete(args);
  }
}
